Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

arcIR5              0x8               main.o
arcIR7              0x8               main.o
arcIR4              0x8               main.o
arcIR6              0x8               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD util.o
LOAD analog.o
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x76c
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_20
 .text          0x000000a6      0x218 main.o
                0x000000a6                __vector_24
                0x0000013e                __vector_10
 .text          0x000002be      0x356 util.o
                0x000002be                delay_us
                0x000002d0                delay_ms
                0x000002e4                rxDataHandler
                0x000004c4                txDataHandler
 .text          0x00000614      0x100 analog.o
                0x00000614                adcInit
                0x0000062a                analogGather
 .text          0x00000714        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text          0x00000714        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000714        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x00000714                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000714       0x54 main.o
                0x00000714                main
 .text.libgcc   0x00000768        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000768        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000768        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                0x00000768                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000768        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                0x00000768                exit
                0x00000768                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000768        0x4 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000076c                _etext = .

.data           0x00800100       0x18 load address 0x0000076c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100       0x10 main.o
                0x00800100                prevStepR
                0x00800104                prevStepL
                0x00800108                stepPatternR
                0x0080010c                stepPatternL
 .data          0x00800110        0x8 util.o
                0x00800110                stepperCountRight
                0x00800114                stepperCountLeft
 .data          0x00800118        0x0 analog.o
 .data          0x00800118        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .data          0x00800118        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800118        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800118                . = ALIGN (0x2)
                0x00800118                _edata = .
                0x00800118                PROVIDE (__data_end, .)

.bss            0x00800118       0x2c
                0x00800118                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800118        0x0 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800118        0x2 main.o
                0x00800118                stepStateR
                0x00800119                stepStateL
 .bss           0x0080011a        0x9 util.o
                0x0080011a                holder
                0x0080011e                bytesCount
                0x0080011f                i2cTxMode
                0x00800120                gState
                0x00800121                i2cMode
                0x00800122                globalError
 .bss           0x00800123        0x1 analog.o
                0x00800123                arrayIndex
 .bss           0x00800124        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
 .bss           0x00800124        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800124        0x0 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800124       0x20 main.o
                0x00800124                arcIR5
                0x0080012c                arcIR7
                0x00800134                arcIR4
                0x0080013c                arcIR6
                0x00800144                PROVIDE (__bss_end, .)
                0x0000076c                __data_load_start = LOADADDR (.data)
                0x00000784                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800144        0x0
                0x00800144                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800144                PROVIDE (__noinit_end, .)
                0x00800144                _end = .
                0x00800144                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x1908
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006cc      0x7a4 main.o
                                0x7b0 (size before relaxing)
 .stab          0x00000e70      0x588 util.o
                                0x798 (size before relaxing)
 .stab          0x000013f8      0x3a8 analog.o
                                0x5d0 (size before relaxing)
 .stab          0x000017a0       0x54 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                                 0x60 (size before relaxing)
 .stab          0x000017f4       0x9c /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                                 0xa8 (size before relaxing)
 .stab          0x00001890       0x78 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                                 0x84 (size before relaxing)

.stabstr        0x00000000      0xc70
 *(.stabstr)
 .stabstr       0x00000000      0xc70 /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__bss_end                                         /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_clear_bss.o)
                                                  analog.o
                                                  util.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_copy_data.o)
                                                  analog.o
                                                  util.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__init                                            /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__stack                                           /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_1                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_10                                       main.o
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_11                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_12                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_13                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_14                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_15                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_16                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_17                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_18                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_19                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_2                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_20                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_21                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_22                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_23                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_24                                       main.o
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_25                                       /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_3                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_4                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_5                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_6                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_7                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_8                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_9                                        /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vector_default                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
__vectors                                         /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
_exit                                             /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
adcInit                                           analog.o
                                                  main.o
analogGather                                      analog.o
                                                  main.o
arcIR4                                            analog.o
                                                  util.o
                                                  main.o
arcIR5                                            analog.o
                                                  util.o
                                                  main.o
arcIR6                                            analog.o
                                                  util.o
                                                  main.o
arcIR7                                            analog.o
                                                  util.o
                                                  main.o
arrayIndex                                        analog.o
                                                  main.o
bytesCount                                        util.o
                                                  analog.o
                                                  main.o
delay_ms                                          util.o
                                                  main.o
delay_us                                          util.o
                                                  analog.o
exit                                              /usr/lib/gcc/avr/4.6.1/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
gState                                            util.o
                                                  analog.o
                                                  main.o
globalError                                       util.o
                                                  analog.o
                                                  main.o
holder                                            util.o
                                                  analog.o
                                                  main.o
i2cMode                                           util.o
                                                  analog.o
                                                  main.o
i2cTxMode                                         util.o
                                                  analog.o
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.6.1/../../../../avr/lib/avr5/crtm328p.o
prevStepL                                         main.o
prevStepR                                         main.o
rxDataHandler                                     util.o
                                                  main.o
stepPatternL                                      main.o
stepPatternR                                      main.o
stepStateL                                        main.o
stepStateR                                        main.o
stepperCountLeft                                  util.o
                                                  analog.o
                                                  main.o
stepperCountRight                                 util.o
                                                  analog.o
                                                  main.o
txDataHandler                                     util.o
                                                  main.o
