   1               		.file	"RNDISClassDevice.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  11               	.global	RNDIS_Device_ProcessControlRequest
  13               	RNDIS_Device_ProcessControlRequest:
  14               	.LFB99:
  15               		.file 1 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c"
   1:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
   2:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****              LUFA Library
   3:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****      Copyright (C) Dean Camera, 2012.
   4:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   5:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   dean [at] fourwalledcubicle [dot] com
   6:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****            www.lufa-lib.org
   7:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
   8:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
   9:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** /*
  10:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  12:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   Permission to use, copy, modify, distribute, and sell this
  13:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software and its documentation for any purpose is hereby granted
  14:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   without fee, provided that the above copyright notice appear in
  15:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   all copies and that both that the copyright notice and this
  16:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   permission notice and warranty disclaimer appear in supporting
  17:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   documentation, and that the name of the author not be used in
  18:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   advertising or publicity pertaining to distribution of the
  19:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software without specific, written prior permission.
  20:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  21:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   The author disclaim all warranties with regard to this
  22:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   software, including all implied warranties of merchantability
  23:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   and fitness.  In no event shall the author be liable for any
  24:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   special, indirect or consequential damages or any damages
  25:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   in an action of contract, negligence or other tortious action,
  27:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   arising out of or in connection with the use or performance of
  28:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****   this software.
  29:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** */
  30:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  31:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "../../Core/USBMode.h"
  33:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  34:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #if defined(USB_CAN_BE_DEVICE)
  35:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  36:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #define  __INCLUDE_FROM_RNDIS_DEVICE_C
  38:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** #include "RNDISClassDevice.h"
  39:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  40:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  41:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  42:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_SUPPORTED_LIST),
  43:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_PHYSICAL_MEDIUM),
  44:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_HARDWARE_STATUS),
  45:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_SUPPORTED),
  46:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_IN_USE),
  47:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_FRAME_SIZE),
  48:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  49:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_LINK_SPEED),
  50:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_TRANSMIT_BLOCK_SIZE),
  51:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RECEIVE_BLOCK_SIZE),
  52:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_ID),
  53:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_VENDOR_DESCRIPTION),
  54:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_CURRENT_PACKET_FILTER),
  55:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MAXIMUM_TOTAL_SIZE),
  56:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_MEDIA_CONNECT_STATUS),
  57:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_OK),
  58:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_OK),
  59:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_XMIT_ERROR),
  60:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_ERROR),
  61:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_GEN_RCV_NO_BUFFER),
  62:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_PERMANENT_ADDRESS),
  63:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_CURRENT_ADDRESS),
  64:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MULTICAST_LIST),
  65:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_MAXIMUM_LIST_SIZE),
  66:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_RCV_ERROR_ALIGNMENT),
  67:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_ONE_COLLISION),
  68:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		CPU_TO_LE32(OID_802_3_XMIT_MORE_COLLISIONS),
  69:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	};
  70:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  71:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  72:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
  16               		.loc 1 72 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 16, -2
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 17, -3
  27 0004 CF93      		push r28
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 28, -4
  31 0006 DF93      		push r29
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 29, -5
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 4 */
  38               	.L__stack_usage = 4
  39 0008 EC01      		movw r28,r24
  40               	.LBB62:
  41               	.LBB63:
  42               		.file 2 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2012.
   4:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 148:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 331:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 421:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  43               		.loc 2 491 0
  44 000a 8091 E800 		lds r24,232
  45               	.LVL1:
  46               	.LBE63:
  47               	.LBE62:
  73:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsSETUPReceived()))
  48               		.loc 1 73 0
  49 000e 83FF      		sbrs r24,3
  50 0010 00C0      		rjmp .L1
  74:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  75:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  76:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  51               		.loc 1 76 0
  52 0012 8881      		ld r24,Y
  53 0014 90E0      		ldi r25,0
  54 0016 2091 0000 		lds r18,USB_ControlRequest+4
  55 001a 3091 0000 		lds r19,USB_ControlRequest+4+1
  56 001e 2817      		cp r18,r24
  57 0020 3907      		cpc r19,r25
  58 0022 01F0      		breq .+2
  59 0024 00C0      		rjmp .L1
  77:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
  78:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  79:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (USB_ControlRequest.bRequest)
  60               		.loc 1 79 0
  61 0026 8091 0000 		lds r24,USB_ControlRequest+1
  62 002a 8823      		tst r24
  63 002c 01F0      		breq .L3
  64 002e 8130      		cpi r24,lo8(1)
  65 0030 01F0      		breq .+2
  66 0032 00C0      		rjmp .L1
  67 0034 00C0      		rjmp .L4
  68               	.L3:
  80:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
  81:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
  82:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  69               		.loc 1 82 0
  70 0036 8091 0000 		lds r24,USB_ControlRequest
  71 003a 8132      		cpi r24,lo8(33)
  72 003c 01F0      		breq .+2
  73 003e 00C0      		rjmp .L1
  74               	.LBB64:
  75               	.LBB65:
 492:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
  76               		.loc 2 504 0
  77 0040 8091 E800 		lds r24,232
  78 0044 877F      		andi r24,lo8(-9)
  79 0046 8093 E800 		sts 232,r24
  80               	.LBE65:
  81               	.LBE64:
  83:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  84:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
  85:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, USB_ControlReques
  82               		.loc 1 85 0
  83 004a 6091 0000 		lds r22,USB_ControlRequest+6
  84 004e 7091 0000 		lds r23,USB_ControlRequest+6+1
  85 0052 CE01      		movw r24,r28
  86 0054 4596      		adiw r24,21
  87 0056 0E94 0000 		call Endpoint_Read_Control_Stream_LE
  88               	.LVL2:
  89               	.LBB66:
  90               	.LBB67:
 505:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
  91               		.loc 2 516 0
  92 005a 8091 E800 		lds r24,232
  93 005e 8E77      		andi r24,lo8(126)
  94 0060 8093 E800 		sts 232,r24
  95               	.LVL3:
  96               	.LBE67:
  97               	.LBE66:
  98               	.LBB68:
  99               	.LBB69:
  86:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearIN();
  87:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  88:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  89:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
  90:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  91:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
  92:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
  93:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  94:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
  95:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RND
  96:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
  97:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				if (!(MessageHeader->MessageLength))
  98:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				{
  99:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 100:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 101:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				}
 102:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 103:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearSETUP();
 104:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, le32_to_cpu(Mess
 105:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_ClearOUT();
 106:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 107:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 108:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 109:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 110:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 111:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 112:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 113:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 114:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 115:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 116:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 117:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 118:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 119:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 120:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint16_t Size;
 121:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint8_t  Type;
 122:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		uint8_t  Direction;
 123:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		bool     DoubleBanked;
 124:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 125:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 126:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 127:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 128:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 129:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 130:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 131:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 132:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 133:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 134:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 135:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
 136:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 137:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 138:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 139:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 140:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 141:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 142:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 143:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_INTERRUPT;
 144:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 145:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 146:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else
 147:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 148:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			continue;
 149:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 150:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 151:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 152:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		                                 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 153:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		{
 154:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 155:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		}
 156:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 157:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 158:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return true;
 159:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 160:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 161:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 162:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 163:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 164:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return;
 165:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 166:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 167:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 168:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 169:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 170:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 171:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 172:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 173:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
 174:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wValue        = CPU_TO_LE16(0),
 175:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wIndex        = CPU_TO_LE16(0),
 176:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				.wLength       = CPU_TO_LE16(0),
 177:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			};
 178:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 179:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 180:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 181:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_ClearIN();
 182:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 183:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 184:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 185:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 186:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 187:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 188:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 189:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 190:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 191:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 192:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 193:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 194:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (le32_to_cpu(MessageHeader->MessageType))
 100               		.loc 1 194 0
 101 0064 4D89      		ldd r20,Y+21
 102 0066 5E89      		ldd r21,Y+22
 103 0068 6F89      		ldd r22,Y+23
 104 006a 788D      		ldd r23,Y+24
 105 006c 4430      		cpi r20,4
 106 006e 5105      		cpc r21,__zero_reg__
 107 0070 6105      		cpc r22,__zero_reg__
 108 0072 7105      		cpc r23,__zero_reg__
 109 0074 01F4      		brne .+2
 110 0076 00C0      		rjmp .L7
 111 0078 00F4      		brsh .L11
 112 007a 4230      		cpi r20,2
 113 007c 5105      		cpc r21,__zero_reg__
 114 007e 6105      		cpc r22,__zero_reg__
 115 0080 7105      		cpc r23,__zero_reg__
 116 0082 01F0      		breq .L5
 117 0084 4330      		cpi r20,3
 118 0086 5105      		cpc r21,__zero_reg__
 119 0088 6105      		cpc r22,__zero_reg__
 120 008a 7105      		cpc r23,__zero_reg__
 121 008c 01F0      		breq .+2
 122 008e 00C0      		rjmp .L1
 123 0090 00C0      		rjmp .L6
 124               	.L11:
 125 0092 4630      		cpi r20,6
 126 0094 5105      		cpc r21,__zero_reg__
 127 0096 6105      		cpc r22,__zero_reg__
 128 0098 7105      		cpc r23,__zero_reg__
 129 009a 01F4      		brne .+2
 130 009c 00C0      		rjmp .L9
 131 009e 00F4      		brsh .+2
 132 00a0 00C0      		rjmp .L8
 133 00a2 4830      		cpi r20,8
 134 00a4 5105      		cpc r21,__zero_reg__
 135 00a6 6105      		cpc r22,__zero_reg__
 136 00a8 7105      		cpc r23,__zero_reg__
 137 00aa 01F0      		breq .+2
 138 00ac 00C0      		rjmp .L1
 139 00ae 00C0      		rjmp .L10
 140               	.L5:
 141               	.LBB70:
 195:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 196:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 197:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 142               		.loc 1 197 0
 143 00b0 FE01      		movw r30,r28
 144 00b2 EB56      		subi r30,107
 145 00b4 FF4F      		sbci r31,-1
 146 00b6 21E0      		ldi r18,lo8(1)
 147 00b8 2083      		st Z,r18
 148               	.LVL4:
 198:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 199:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 200:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 201:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 202:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			               (RNDIS_Initialize_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 203:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 204:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageType            = CPU_TO_LE32(REMOTE_NDIS_INITIALIZE_CMPLT);
 149               		.loc 1 204 0
 150 00ba 82E0      		ldi r24,lo8(2)
 151 00bc 90E0      		ldi r25,0
 152 00be A0E0      		ldi r26,0
 153 00c0 B0E8      		ldi r27,lo8(-128)
 154 00c2 8D8B      		std Y+21,r24
 155 00c4 9E8B      		std Y+22,r25
 156 00c6 AF8B      		std Y+23,r26
 157 00c8 B88F      		std Y+24,r27
 205:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MessageLength          = CPU_TO_LE32(sizeof(RNDIS_Initialize_Complete_t));
 158               		.loc 1 205 0
 159 00ca 84E3      		ldi r24,lo8(52)
 160 00cc 90E0      		ldi r25,0
 161 00ce A0E0      		ldi r26,0
 162 00d0 B0E0      		ldi r27,0
 163 00d2 898F      		std Y+25,r24
 164 00d4 9A8F      		std Y+26,r25
 165 00d6 AB8F      		std Y+27,r26
 166 00d8 BC8F      		std Y+28,r27
 206:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->RequestId              = INITIALIZE_Message->RequestId;
 207:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Status                 = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 167               		.loc 1 207 0
 168 00da 19A2      		std Y+33,__zero_reg__
 169 00dc 1AA2      		std Y+34,__zero_reg__
 170 00de 1BA2      		std Y+35,__zero_reg__
 171 00e0 1CA2      		std Y+36,__zero_reg__
 208:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 209:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MajorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MAJOR);
 172               		.loc 1 209 0
 173 00e2 81E0      		ldi r24,lo8(1)
 174 00e4 90E0      		ldi r25,0
 175 00e6 A0E0      		ldi r26,0
 176 00e8 B0E0      		ldi r27,0
 177 00ea 8DA3      		std Y+37,r24
 178 00ec 9EA3      		std Y+38,r25
 179 00ee AFA3      		std Y+39,r26
 180 00f0 B8A7      		std Y+40,r27
 210:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MinorVersion           = CPU_TO_LE32(REMOTE_NDIS_VERSION_MINOR);
 181               		.loc 1 210 0
 182 00f2 19A6      		std Y+41,__zero_reg__
 183 00f4 1AA6      		std Y+42,__zero_reg__
 184 00f6 1BA6      		std Y+43,__zero_reg__
 185 00f8 1CA6      		std Y+44,__zero_reg__
 211:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->DeviceFlags            = CPU_TO_LE32(REMOTE_NDIS_DF_CONNECTIONLESS);
 186               		.loc 1 211 0
 187 00fa 8DA7      		std Y+45,r24
 188 00fc 9EA7      		std Y+46,r25
 189 00fe AFA7      		std Y+47,r26
 190 0100 B8AB      		std Y+48,r27
 212:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->Medium                 = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 191               		.loc 1 212 0
 192 0102 19AA      		std Y+49,__zero_reg__
 193 0104 1AAA      		std Y+50,__zero_reg__
 194 0106 1BAA      		std Y+51,__zero_reg__
 195 0108 1CAA      		std Y+52,__zero_reg__
 213:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer  = CPU_TO_LE32(1);
 196               		.loc 1 213 0
 197 010a 8DAB      		std Y+53,r24
 198 010c 9EAB      		std Y+54,r25
 199 010e AFAB      		std Y+55,r26
 200 0110 B8AF      		std Y+56,r27
 214:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->MaxTransferSize        = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) + ETHER
 201               		.loc 1 214 0
 202 0112 88E0      		ldi r24,lo8(8)
 203 0114 96E0      		ldi r25,lo8(6)
 204 0116 A0E0      		ldi r26,0
 205 0118 B0E0      		ldi r27,0
 206 011a 89AF      		std Y+57,r24
 207 011c 9AAF      		std Y+58,r25
 208 011e ABAF      		std Y+59,r26
 209 0120 BCAF      		std Y+60,r27
 215:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->PacketAlignmentFactor  = CPU_TO_LE32(0);
 210               		.loc 1 215 0
 211 0122 FE01      		movw r30,r28
 212 0124 FD96      		adiw r30,61
 213 0126 1082      		st Z,__zero_reg__
 214 0128 1182      		std Z+1,__zero_reg__
 215 012a 1282      		std Z+2,__zero_reg__
 216 012c 1382      		std Z+3,__zero_reg__
 216:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListOffset           = CPU_TO_LE32(0);
 217               		.loc 1 216 0
 218 012e FE01      		movw r30,r28
 219 0130 EF5B      		subi r30,-65
 220 0132 FF4F      		sbci r31,-1
 221 0134 1082      		st Z,__zero_reg__
 222 0136 1182      		std Z+1,__zero_reg__
 223 0138 1282      		std Z+2,__zero_reg__
 224 013a 1382      		std Z+3,__zero_reg__
 217:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			INITIALIZE_Response->AFListSize             = CPU_TO_LE32(0);
 225               		.loc 1 217 0
 226 013c FE01      		movw r30,r28
 227 013e EB5B      		subi r30,-69
 228 0140 FF4F      		sbci r31,-1
 229 0142 1082      		st Z,__zero_reg__
 230 0144 1182      		std Z+1,__zero_reg__
 231 0146 1282      		std Z+2,__zero_reg__
 232 0148 1382      		std Z+3,__zero_reg__
 218:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 219:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Initialized;
 233               		.loc 1 219 0
 234 014a CA56      		subi r28,106
 235 014c DF4F      		sbci r29,-1
 236               	.LVL5:
 237 014e 2883      		st Y,r18
 238 0150 00C0      		rjmp .L1
 239               	.LVL6:
 240               	.L6:
 220:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 221:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_HALT_MSG:
 222:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = false;
 241               		.loc 1 222 0
 242 0152 FE01      		movw r30,r28
 243 0154 EB56      		subi r30,107
 244 0156 FF4F      		sbci r31,-1
 245 0158 1082      		st Z,__zero_reg__
 223:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 224:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			MessageHeader->MessageLength                = CPU_TO_LE32(0);
 246               		.loc 1 224 0
 247 015a 198E      		std Y+25,__zero_reg__
 248 015c 1A8E      		std Y+26,__zero_reg__
 249 015e 1B8E      		std Y+27,__zero_reg__
 250 0160 1C8E      		std Y+28,__zero_reg__
 225:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 226:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState    = RNDIS_Uninitialized;
 251               		.loc 1 226 0
 252 0162 CA56      		subi r28,106
 253 0164 DF4F      		sbci r29,-1
 254               	.LVL7:
 255 0166 1882      		st Y,__zero_reg__
 256 0168 00C0      		rjmp .L1
 257               	.LVL8:
 258               	.L7:
 227:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 228:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_QUERY_MSG:
 229:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 259               		.loc 1 229 0
 260 016a FE01      		movw r30,r28
 261 016c EB56      		subi r30,107
 262 016e FF4F      		sbci r31,-1
 263 0170 81E0      		ldi r24,lo8(1)
 264 0172 8083      		st Z,r24
 265               	.LVL9:
 230:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 231:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Message_t*  QUERY_Message       = (RNDIS_Query_Message_t*)&RNDISInterfaceInfo->State
 232:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Query_Complete_t* QUERY_Response      = (RNDIS_Query_Complete_t*)&RNDISInterfaceInfo->Stat
 233:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t                Query_Oid           = CPU_TO_LE32(QUERY_Message->Oid);
 266               		.loc 1 233 0
 267 0174 49A1      		ldd r20,Y+33
 268 0176 5AA1      		ldd r21,Y+34
 269 0178 6BA1      		ldd r22,Y+35
 270 017a 7CA1      		ldd r23,Y+36
 271               	.LVL10:
 234:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 235:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    QueryData    = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Heade
 236:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                                      le32_to_cpu(QUERY_Message-
 237:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void*    ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Complet
 272               		.loc 1 237 0
 273 017c DE01      		movw r26,r28
 274 017e 9D96      		adiw r26,45
 275               	.LVL11:
 238:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint16_t ResponseSize;
 239:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 240:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			QUERY_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_QUERY_CMPLT);
 276               		.loc 1 240 0
 277 0180 04E0      		ldi r16,lo8(4)
 278 0182 10E0      		ldi r17,0
 279 0184 20E0      		ldi r18,0
 280 0186 30E8      		ldi r19,lo8(-128)
 281 0188 0D8B      		std Y+21,r16
 282 018a 1E8B      		std Y+22,r17
 283 018c 2F8B      		std Y+23,r18
 284 018e 388F      		std Y+24,r19
 285               	.LVL12:
 286               	.LBB71:
 287               	.LBB72:
 241:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 242:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, le32_to_cpu(QUERY_Me
 243:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                  ResponseData, &ResponseSize))
 244:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 245:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 246:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 247:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 248:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 249:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 250:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 251:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			else
 252:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			{
 253:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 254:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 255:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 256:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 257:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 258:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			}
 259:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 260:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 261:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_SET_MSG:
 262:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 263:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 264:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Message_t*  SET_Message           = (RNDIS_Set_Message_t*)&RNDISInterfaceInfo->State.R
 265:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Set_Complete_t* SET_Response          = (RNDIS_Set_Complete_t*)&RNDISInterfaceInfo->State.
 266:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 267:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 268:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 269:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 270:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->RequestId                     = SET_Message->RequestId;
 271:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 272:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 273:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 274:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 275:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 276:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   le32_to_cpu(SET_Message->InformationBufferLen
 277:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 278:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 279:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_RESET_MSG:
 280:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 281:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 282:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_Reset_Complete_t* RESET_Response      = (RNDIS_Reset_Complete_t*)&RNDISInterfaceInfo->Stat
 283:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 284:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 285:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 286:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 287:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->AddressingReset             = CPU_TO_LE32(0);
 288:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 289:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 290:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 291:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 292:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 293:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 294:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 295:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 296:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                (RNDIS_KeepAlive_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 297:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 298:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 299:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 300:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->RequestId               = KEEPALIVE_Message->RequestId;
 301:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 302:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 303:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			break;
 304:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 305:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 306:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 307:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 308:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint32_t OId,
 309:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* const QueryData,
 310:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           const uint16_t QuerySize,
 311:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           void* ResponseData,
 312:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                           uint16_t* const ResponseSize)
 313:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 314:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QueryData;
 315:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)QuerySize;
 316:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 317:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 288               		.loc 1 317 0
 289 0190 4E30      		cpi r20,14
 290 0192 21E0      		ldi r18,1
 291 0194 5207      		cpc r21,r18
 292 0196 6207      		cpc r22,r18
 293 0198 7105      		cpc r23,__zero_reg__
 294 019a 01F4      		brne .+2
 295 019c 00C0      		rjmp .L20
 296 019e 00F0      		brlo .+2
 297 01a0 00C0      		rjmp .L27
 298 01a2 4630      		cpi r20,6
 299 01a4 E1E0      		ldi r30,1
 300 01a6 5E07      		cpc r21,r30
 301 01a8 6E07      		cpc r22,r30
 302 01aa 7105      		cpc r23,__zero_reg__
 303 01ac 01F4      		brne .+2
 304 01ae 00C0      		rjmp .L16
 305 01b0 00F4      		brsh .L28
 306 01b2 4230      		cpi r20,2
 307 01b4 21E0      		ldi r18,1
 308 01b6 5207      		cpc r21,r18
 309 01b8 6207      		cpc r22,r18
 310 01ba 7105      		cpc r23,__zero_reg__
 311 01bc 01F4      		brne .+2
 312 01be 00C0      		rjmp .L24
 313 01c0 00F4      		brsh .L29
 314 01c2 4130      		cpi r20,1
 315 01c4 5140      		sbci r21,1
 316 01c6 6140      		sbci r22,1
 317 01c8 7105      		cpc r23,__zero_reg__
 318 01ca 01F0      		breq .+2
 319 01cc 00C0      		rjmp .L12
 320 01ce 00C0      		rjmp .L13
 321               	.L29:
 322 01d0 4530      		cpi r20,5
 323 01d2 5140      		sbci r21,1
 324 01d4 6140      		sbci r22,1
 325 01d6 7105      		cpc r23,__zero_reg__
 326 01d8 00F0      		brlo .+2
 327 01da 00C0      		rjmp .L12
 328 01dc 00C0      		rjmp .L24
 329               	.L28:
 330 01de 4C30      		cpi r20,12
 331 01e0 21E0      		ldi r18,1
 332 01e2 5207      		cpc r21,r18
 333 01e4 6207      		cpc r22,r18
 334 01e6 7105      		cpc r23,__zero_reg__
 335 01e8 00F4      		brsh .L30
 336 01ea 4A30      		cpi r20,10
 337 01ec 81E0      		ldi r24,1
 338 01ee 5807      		cpc r21,r24
 339 01f0 6807      		cpc r22,r24
 340 01f2 7105      		cpc r23,__zero_reg__
 341 01f4 00F0      		brlo .+2
 342 01f6 00C0      		rjmp .L16
 343 01f8 4730      		cpi r20,7
 344 01fa 5140      		sbci r21,1
 345 01fc 6140      		sbci r22,1
 346 01fe 7105      		cpc r23,__zero_reg__
 347 0200 01F0      		breq .+2
 348 0202 00C0      		rjmp .L12
 349 0204 00C0      		rjmp .L17
 350               	.L30:
 351 0206 4C30      		cpi r20,12
 352 0208 F1E0      		ldi r31,1
 353 020a 5F07      		cpc r21,r31
 354 020c 6F07      		cpc r22,r31
 355 020e 7105      		cpc r23,__zero_reg__
 356 0210 01F4      		brne .+2
 357 0212 00C0      		rjmp .L18
 358 0214 4D30      		cpi r20,13
 359 0216 5140      		sbci r21,1
 360 0218 6140      		sbci r22,1
 361 021a 7105      		cpc r23,__zero_reg__
 362 021c 01F0      		breq .+2
 363 021e 00C0      		rjmp .L12
 364 0220 00C0      		rjmp .L19
 365               	.L27:
 366 0222 4630      		cpi r20,6
 367 0224 81E0      		ldi r24,1
 368 0226 5807      		cpc r21,r24
 369 0228 82E0      		ldi r24,2
 370 022a 6807      		cpc r22,r24
 371 022c 7105      		cpc r23,__zero_reg__
 372 022e 00F4      		brsh .L31
 373 0230 4130      		cpi r20,1
 374 0232 E1E0      		ldi r30,1
 375 0234 5E07      		cpc r21,r30
 376 0236 E2E0      		ldi r30,2
 377 0238 6E07      		cpc r22,r30
 378 023a 7105      		cpc r23,__zero_reg__
 379 023c 00F0      		brlo .+2
 380 023e 00C0      		rjmp .L24
 381 0240 4431      		cpi r20,20
 382 0242 F1E0      		ldi r31,1
 383 0244 5F07      		cpc r21,r31
 384 0246 6F07      		cpc r22,r31
 385 0248 7105      		cpc r23,__zero_reg__
 386 024a 01F4      		brne .+2
 387 024c 00C0      		rjmp .L24
 388 024e 4230      		cpi r20,2
 389 0250 22E0      		ldi r18,2
 390 0252 5207      		cpc r21,r18
 391 0254 21E0      		ldi r18,1
 392 0256 6207      		cpc r22,r18
 393 0258 7105      		cpc r23,__zero_reg__
 394 025a 01F4      		brne .+2
 395 025c 00C0      		rjmp .L24
 396 025e 4131      		cpi r20,17
 397 0260 5140      		sbci r21,1
 398 0262 6140      		sbci r22,1
 399 0264 7105      		cpc r23,__zero_reg__
 400 0266 01F0      		breq .+2
 401 0268 00C0      		rjmp .L12
 402 026a 00C0      		rjmp .L21
 403               	.L31:
 404 026c 4430      		cpi r20,4
 405 026e E1E0      		ldi r30,1
 406 0270 5E07      		cpc r21,r30
 407 0272 6E07      		cpc r22,r30
 408 0274 7E07      		cpc r23,r30
 409 0276 01F4      		brne .+2
 410 0278 00C0      		rjmp .L26
 411 027a 00F4      		brsh .L32
 412 027c 4150      		subi r20,1
 413 027e 5140      		sbci r21,1
 414 0280 6140      		sbci r22,1
 415 0282 7140      		sbci r23,1
 416               	.LVL13:
 417 0284 4230      		cpi r20,2
 418 0286 5105      		cpc r21,__zero_reg__
 419 0288 6105      		cpc r22,__zero_reg__
 420 028a 7105      		cpc r23,__zero_reg__
 421 028c 00F0      		brlo .+2
 422 028e 00C0      		rjmp .L12
 423 0290 00C0      		rjmp .L49
 424               	.LVL14:
 425               	.L32:
 426 0292 4150      		subi r20,1
 427 0294 5140      		sbci r21,1
 428 0296 6240      		sbci r22,2
 429 0298 7140      		sbci r23,1
 430               	.LVL15:
 431 029a 4330      		cpi r20,3
 432 029c 5105      		cpc r21,__zero_reg__
 433 029e 6105      		cpc r22,__zero_reg__
 434 02a0 7105      		cpc r23,__zero_reg__
 435 02a2 00F0      		brlo .+2
 436 02a4 00C0      		rjmp .L12
 437 02a6 00C0      		rjmp .L24
 438               	.LVL16:
 439               	.L13:
 318:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 319:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_SUPPORTED_LIST:
 320:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 321:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 322:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 440               		.loc 1 322 0
 441 02a8 4CE6      		ldi r20,lo8(108)
 442 02aa 50E0      		ldi r21,0
 443               	.LVL17:
 444 02ac 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 445 02ae 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 446 02b0 CD01      		movw r24,r26
 447 02b2 0E94 0000 		call memcpy_P
 448               	.LVL18:
 320:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 449               		.loc 1 320 0
 450 02b6 0CE6      		ldi r16,lo8(108)
 451 02b8 10E0      		ldi r17,0
 452 02ba 00C0      		rjmp .L33
 453               	.LVL19:
 454               	.L18:
 323:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 324:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 325:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 326:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 327:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 328:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate that the device is a true ethernet link */
 329:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 331:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 332:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_HARDWARE_STATUS:
 333:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 334:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 335:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(NDIS_HardwareStatus_Ready);
 336:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 337:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 338:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 339:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_IN_USE:
 340:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 341:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 342:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIUM_802_3);
 343:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 344:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 345:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_ID:
 346:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 347:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 348:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 349:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0x00FFFFFF);
 455               		.loc 1 349 0
 456 02bc 8FEF      		ldi r24,lo8(-1)
 457 02be 9FEF      		ldi r25,lo8(-1)
 458 02c0 AFEF      		ldi r26,lo8(-1)
 459 02c2 B0E0      		ldi r27,0
 460 02c4 00C0      		rjmp .L52
 461               	.LVL20:
 462               	.L16:
 350:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 351:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 352:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 353:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 354:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 355:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 356:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 357:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(ETHERNET_FRAME_SIZE_MAX);
 463               		.loc 1 357 0
 464 02c6 8CED      		ldi r24,lo8(-36)
 465 02c8 95E0      		ldi r25,lo8(5)
 466 02ca A0E0      		ldi r26,0
 467 02cc B0E0      		ldi r27,0
 468 02ce 00C0      		rjmp .L52
 469               	.LVL21:
 470               	.L19:
 358:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 359:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 360:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 361:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 471               		.loc 1 361 0
 472 02d0 6D85      		ldd r22,Y+13
 473 02d2 7E85      		ldd r23,Y+14
 474 02d4 CB01      		movw r24,r22
 475 02d6 FC01      		movw r30,r24
 476               		0:
 477 02d8 0190      		ld __tmp_reg__,Z+
 478 02da 0020      		tst __tmp_reg__
 479 02dc 01F4      		brne 0b
 480 02de 8F01      		movw r16,r30
 481 02e0 081B      		sub r16,r24
 482 02e2 190B      		sbc r17,r25
 483               	.LVL22:
 362:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 363:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 484               		.loc 1 363 0
 485 02e4 A801      		movw r20,r16
 486               	.LVL23:
 487 02e6 CD01      		movw r24,r26
 488 02e8 0E94 0000 		call memcpy
 489               	.LVL24:
 490 02ec 00C0      		rjmp .L33
 491               	.LVL25:
 492               	.L17:
 364:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 365:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 366:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 367:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 368:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 369:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(REMOTE_NDIS_MEDIA_STATE_CONNECTED);
 370:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 371:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 372:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_LINK_SPEED:
 373:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 374:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 375:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate 10Mb/s link speed */
 376:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(100000);
 493               		.loc 1 376 0
 494 02ee 80EA      		ldi r24,lo8(-96)
 495 02f0 96E8      		ldi r25,lo8(-122)
 496 02f2 A1E0      		ldi r26,lo8(1)
 497 02f4 B0E0      		ldi r27,0
 498 02f6 00C0      		rjmp .L52
 499               	.LVL26:
 500               	.L49:
 377:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 378:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 379:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 380:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_CURRENT_ADDRESS:
 381:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 382:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 383:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 501               		.loc 1 383 0
 502 02f8 FE01      		movw r30,r28
 503 02fa 3F96      		adiw r30,15
 504 02fc 86E0      		ldi r24,lo8(6)
 505               		0:
 506 02fe 0190      		ld r0,Z+
 507 0300 0D92      		st X+,r0
 508 0302 8A95      		dec r24
 509 0304 01F4      		brne 0b
 510               	.LVL27:
 381:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 511               		.loc 1 381 0
 512 0306 06E0      		ldi r16,lo8(6)
 513 0308 10E0      		ldi r17,0
 514 030a 00C0      		rjmp .L33
 515               	.LVL28:
 516               	.L26:
 384:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 385:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 386:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 387:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 388:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 389:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate only one multicast address supported */
 390:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(1);
 517               		.loc 1 390 0
 518 030c 81E0      		ldi r24,lo8(1)
 519 030e 90E0      		ldi r25,0
 520 0310 A0E0      		ldi r26,0
 521 0312 B0E0      		ldi r27,0
 522 0314 00C0      		rjmp .L52
 523               	.LVL29:
 524               	.L20:
 391:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 392:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 393:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 394:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 395:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 396:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = cpu_to_le32(RNDISInterfaceInfo->State.CurrPacketFilter);
 525               		.loc 1 396 0
 526 0316 FE01      		movw r30,r28
 527 0318 E956      		subi r30,105
 528 031a FF4F      		sbci r31,-1
 529 031c 8081      		ld r24,Z
 530 031e 9181      		ldd r25,Z+1
 531 0320 A281      		ldd r26,Z+2
 532 0322 B381      		ldd r27,Z+3
 533 0324 00C0      		rjmp .L52
 534               	.LVL30:
 535               	.L24:
 397:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 398:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 399:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_OK:
 400:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_OK:
 401:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_XMIT_ERROR:
 402:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_ERROR:
 403:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_RCV_NO_BUFFER:
 404:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 405:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 406:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 407:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 408:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 409:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Unused statistic OIDs - always return 0 for each */
 410:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(0);
 536               		.loc 1 410 0
 537 0326 1DA6      		std Y+45,__zero_reg__
 538 0328 1EA6      		std Y+46,__zero_reg__
 539 032a 1FA6      		std Y+47,__zero_reg__
 540 032c 18AA      		std Y+48,__zero_reg__
 541 032e 00C0      		rjmp .L51
 542               	.LVL31:
 543               	.L21:
 411:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 412:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 413:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 414:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 415:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 416:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 417:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*((uint32_t*)ResponseData) = CPU_TO_LE32(RNDIS_MESSAGE_BUFFER_SIZE + ETHERNET_FRAME_SIZE_MAX);
 544               		.loc 1 417 0
 545 0330 8CE5      		ldi r24,lo8(92)
 546 0332 96E0      		ldi r25,lo8(6)
 547 0334 A0E0      		ldi r26,0
 548 0336 B0E0      		ldi r27,0
 549               	.L52:
 550 0338 8DA7      		std Y+45,r24
 551 033a 9EA7      		std Y+46,r25
 552 033c AFA7      		std Y+47,r26
 553 033e B8AB      		std Y+48,r27
 554               	.LVL32:
 555               	.L51:
 414:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			*ResponseSize = sizeof(uint32_t);
 556               		.loc 1 414 0
 557 0340 04E0      		ldi r16,lo8(4)
 558 0342 10E0      		ldi r17,0
 559 0344 00C0      		rjmp .L33
 560               	.LVL33:
 561               	.L8:
 562               	.LBE72:
 563               	.LBE71:
 262:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 564               		.loc 1 262 0
 565 0346 FE01      		movw r30,r28
 566 0348 EB56      		subi r30,107
 567 034a FF4F      		sbci r31,-1
 568 034c 81E0      		ldi r24,lo8(1)
 569 034e 8083      		st Z,r24
 570               	.LVL34:
 266:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			uint32_t              SET_Oid               = le32_to_cpu(SET_Message->Oid);
 571               		.loc 1 266 0
 572 0350 89A1      		ldd r24,Y+33
 573 0352 9AA1      		ldd r25,Y+34
 574 0354 ABA1      		ldd r26,Y+35
 575 0356 BCA1      		ldd r27,Y+36
 576               	.LVL35:
 268:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageType                   = CPU_TO_LE32(REMOTE_NDIS_SET_CMPLT);
 577               		.loc 1 268 0
 578 0358 45E0      		ldi r20,lo8(5)
 579 035a 50E0      		ldi r21,0
 580 035c 60E0      		ldi r22,0
 581 035e 70E8      		ldi r23,lo8(-128)
 582 0360 4D8B      		std Y+21,r20
 583 0362 5E8B      		std Y+22,r21
 584 0364 6F8B      		std Y+23,r22
 585 0366 788F      		std Y+24,r23
 269:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->MessageLength                 = CPU_TO_LE32(sizeof(RNDIS_Set_Complete_t));
 586               		.loc 1 269 0
 587 0368 40E1      		ldi r20,lo8(16)
 588 036a 50E0      		ldi r21,0
 589 036c 60E0      		ldi r22,0
 590 036e 70E0      		ldi r23,0
 591 0370 498F      		std Y+25,r20
 592 0372 5A8F      		std Y+26,r21
 593 0374 6B8F      		std Y+27,r22
 594 0376 7C8F      		std Y+28,r23
 273:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                              le32_to_cpu(SET_Message->Informati
 595               		.loc 1 273 0
 596 0378 49A5      		ldd r20,Y+41
 597 037a 5AA5      		ldd r21,Y+42
 598 037c 6BA5      		ldd r22,Y+43
 599 037e 7CA5      		ldd r23,Y+44
 600               	.LVL36:
 601               	.LBB73:
 602               	.LBB74:
 418:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 419:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 420:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 421:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 422:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 423:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 424:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 425:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 426:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint32_t OId,
 427:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const void* SetData,
 428:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                         const uint16_t SetSize)
 429:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 430:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	(void)SetSize;
 431:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 432:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	switch (OId)
 603               		.loc 1 432 0
 604 0380 8E30      		cpi r24,14
 605 0382 F1E0      		ldi r31,1
 606 0384 9F07      		cpc r25,r31
 607 0386 AF07      		cpc r26,r31
 608 0388 B105      		cpc r27,__zero_reg__
 609 038a 01F0      		breq .L35
 610 038c 8330      		cpi r24,3
 611 038e 9140      		sbci r25,1
 612 0390 A140      		sbci r26,1
 613 0392 B140      		sbci r27,1
 614 0394 01F4      		brne .L50
 615 0396 00C0      		rjmp .L36
 616               	.L35:
 617               	.LBE74:
 618               	.LBE73:
 272:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 619               		.loc 1 272 0
 620 0398 DB01      		movw r26,r22
 621 039a CA01      		movw r24,r20
 622               	.LVL37:
 623 039c 0896      		adiw r24,8
 624 039e A11D      		adc r26,__zero_reg__
 625 03a0 B11D      		adc r27,__zero_reg__
 626               	.LBB76:
 627               	.LBB75:
 433:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 434:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 435:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = le32_to_cpu(*((uint32_t*)SetData));
 628               		.loc 1 435 0
 629 03a2 FE01      		movw r30,r28
 630 03a4 E80F      		add r30,r24
 631 03a6 F91F      		adc r31,r25
 632 03a8 8589      		ldd r24,Z+21
 633 03aa 9689      		ldd r25,Z+22
 634 03ac A789      		ldd r26,Z+23
 635 03ae B08D      		ldd r27,Z+24
 636 03b0 FE01      		movw r30,r28
 637 03b2 E956      		subi r30,105
 638 03b4 FF4F      		sbci r31,-1
 639 03b6 8083      		st Z,r24
 640 03b8 9183      		std Z+1,r25
 641 03ba A283      		std Z+2,r26
 642 03bc B383      		std Z+3,r27
 436:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.CurrRNDISState   = le32_to_cpu((RNDISInterfaceInfo->State.CurrPacketFi
 643               		.loc 1 436 0
 644 03be FE01      		movw r30,r28
 645 03c0 EA56      		subi r30,106
 646 03c2 FF4F      		sbci r31,-1
 647 03c4 82E0      		ldi r24,lo8(2)
 648 03c6 8083      		st Z,r24
 649 03c8 00C0      		rjmp .L36
 650               	.LVL38:
 651               	.L50:
 277:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 652               		.loc 1 277 0
 653 03ca 8BEB      		ldi r24,lo8(-69)
 654 03cc 90E0      		ldi r25,0
 655 03ce A0E0      		ldi r26,0
 656 03d0 B0EC      		ldi r27,lo8(-64)
 657               	.LVL39:
 658               	.L34:
 659               	.LBE75:
 660               	.LBE76:
 275:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 661               		.loc 1 275 0
 662 03d2 89A3      		std Y+33,r24
 663 03d4 9AA3      		std Y+34,r25
 664 03d6 ABA3      		std Y+35,r26
 665 03d8 BCA3      		std Y+36,r27
 666 03da 00C0      		rjmp .L1
 667               	.LVL40:
 668               	.L9:
 280:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 669               		.loc 1 280 0
 670 03dc FE01      		movw r30,r28
 671 03de EB56      		subi r30,107
 672 03e0 FF4F      		sbci r31,-1
 673 03e2 81E0      		ldi r24,lo8(1)
 674 03e4 8083      		st Z,r24
 675               	.LVL41:
 284:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageType                 = CPU_TO_LE32(REMOTE_NDIS_RESET_CMPLT);
 676               		.loc 1 284 0
 677 03e6 86E0      		ldi r24,lo8(6)
 678 03e8 90E0      		ldi r25,0
 679 03ea A0E0      		ldi r26,0
 680 03ec B0E8      		ldi r27,lo8(-128)
 681 03ee 8D8B      		std Y+21,r24
 682 03f0 9E8B      		std Y+22,r25
 683 03f2 AF8B      		std Y+23,r26
 684 03f4 B88F      		std Y+24,r27
 285:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->MessageLength               = CPU_TO_LE32(sizeof(RNDIS_Reset_Complete_t));
 685               		.loc 1 285 0
 686 03f6 80E1      		ldi r24,lo8(16)
 687 03f8 90E0      		ldi r25,0
 688 03fa A0E0      		ldi r26,0
 689 03fc B0E0      		ldi r27,0
 690 03fe 898F      		std Y+25,r24
 691 0400 9A8F      		std Y+26,r25
 692 0402 AB8F      		std Y+27,r26
 693 0404 BC8F      		std Y+28,r27
 286:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RESET_Response->Status                      = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 694               		.loc 1 286 0
 695 0406 1D8E      		std Y+29,__zero_reg__
 696 0408 1E8E      		std Y+30,__zero_reg__
 697 040a 1F8E      		std Y+31,__zero_reg__
 698 040c 18A2      		std Y+32,__zero_reg__
 699 040e 00C0      		rjmp .L53
 700               	.LVL42:
 701               	.L10:
 291:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			RNDISInterfaceInfo->State.ResponseReady     = true;
 702               		.loc 1 291 0
 703 0410 FE01      		movw r30,r28
 704 0412 EB56      		subi r30,107
 705 0414 FF4F      		sbci r31,-1
 706 0416 81E0      		ldi r24,lo8(1)
 707 0418 8083      		st Z,r24
 708               	.LVL43:
 298:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageType             = CPU_TO_LE32(REMOTE_NDIS_KEEPALIVE_CMPLT);
 709               		.loc 1 298 0
 710 041a 88E0      		ldi r24,lo8(8)
 711 041c 90E0      		ldi r25,0
 712 041e A0E0      		ldi r26,0
 713 0420 B0E8      		ldi r27,lo8(-128)
 714 0422 8D8B      		std Y+21,r24
 715 0424 9E8B      		std Y+22,r25
 716 0426 AF8B      		std Y+23,r26
 717 0428 B88F      		std Y+24,r27
 299:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_KeepAlive_Complete_t));
 718               		.loc 1 299 0
 719 042a 80E1      		ldi r24,lo8(16)
 720 042c 90E0      		ldi r25,0
 721 042e A0E0      		ldi r26,0
 722 0430 B0E0      		ldi r27,0
 723 0432 898F      		std Y+25,r24
 724 0434 9A8F      		std Y+26,r25
 725 0436 AB8F      		std Y+27,r26
 726 0438 BC8F      		std Y+28,r27
 727               	.LVL44:
 728               	.L53:
 301:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			KEEPALIVE_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 729               		.loc 1 301 0
 730 043a 19A2      		std Y+33,__zero_reg__
 731 043c 1AA2      		std Y+34,__zero_reg__
 732 043e 1BA2      		std Y+35,__zero_reg__
 733 0440 1CA2      		std Y+36,__zero_reg__
 734 0442 00C0      		rjmp .L1
 735               	.LVL45:
 736               	.L4:
 737               	.LBE70:
 738               	.LBE69:
 739               	.LBE68:
  93:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 740               		.loc 1 93 0
 741 0444 8091 0000 		lds r24,USB_ControlRequest
 742 0448 813A      		cpi r24,lo8(-95)
 743 044a 01F0      		breq .+2
 744 044c 00C0      		rjmp .L1
 745               	.LVL46:
 746               	.LBB79:
  97:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				if (!(MessageHeader->MessageLength))
 747               		.loc 1 97 0
 748 044e 898D      		ldd r24,Y+25
 749 0450 9A8D      		ldd r25,Y+26
 750 0452 AB8D      		ldd r26,Y+27
 751 0454 BC8D      		ldd r27,Y+28
 752 0456 892B      		or r24,r25
 753 0458 8A2B      		or r24,r26
 754 045a 8B2B      		or r24,r27
 755 045c 01F4      		brne .L37
  99:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 756               		.loc 1 99 0
 757 045e 1D8A      		std Y+21,__zero_reg__
 100:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 					MessageHeader->MessageLength                    = CPU_TO_LE32(1);
 758               		.loc 1 100 0
 759 0460 81E0      		ldi r24,lo8(1)
 760 0462 90E0      		ldi r25,0
 761 0464 A0E0      		ldi r26,0
 762 0466 B0E0      		ldi r27,0
 763 0468 898F      		std Y+25,r24
 764 046a 9A8F      		std Y+26,r25
 765 046c AB8F      		std Y+27,r26
 766 046e BC8F      		std Y+28,r27
 767               	.L37:
 768               	.LBB80:
 769               	.LBB81:
 504:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 770               		.loc 2 504 0
 771 0470 8091 E800 		lds r24,232
 772 0474 877F      		andi r24,lo8(-9)
 773 0476 8093 E800 		sts 232,r24
 774               	.LBE81:
 775               	.LBE80:
 104:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, le32_to_cpu(Mess
 776               		.loc 1 104 0
 777 047a 698D      		ldd r22,Y+25
 778 047c 7A8D      		ldd r23,Y+26
 779 047e CE01      		movw r24,r28
 780 0480 4596      		adiw r24,21
 781 0482 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 782               	.LVL47:
 783               	.LBB82:
 784               	.LBB83:
 517:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 785               		.loc 2 531 0
 786 0486 8091 E800 		lds r24,232
 787 048a 8B77      		andi r24,lo8(123)
 788 048c 8093 E800 		sts 232,r24
 789               	.LBE83:
 790               	.LBE82:
 107:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				MessageHeader->MessageLength = CPU_TO_LE32(0);
 791               		.loc 1 107 0
 792 0490 198E      		std Y+25,__zero_reg__
 793 0492 1A8E      		std Y+26,__zero_reg__
 794 0494 1B8E      		std Y+27,__zero_reg__
 795 0496 1C8E      		std Y+28,__zero_reg__
 796 0498 00C0      		rjmp .L1
 797               	.LVL48:
 798               	.L33:
 799               	.LBE79:
 800               	.LBB84:
 801               	.LBB78:
 802               	.LBB77:
 245:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_SUCCESS);
 803               		.loc 1 245 0
 804 049a 19A2      		std Y+33,__zero_reg__
 805 049c 1AA2      		std Y+34,__zero_reg__
 806 049e 1BA2      		std Y+35,__zero_reg__
 807 04a0 1CA2      		std Y+36,__zero_reg__
 246:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = cpu_to_le32(sizeof(RNDIS_Query_Complete_t) + Response
 808               		.loc 1 246 0
 809 04a2 A801      		movw r20,r16
 810 04a4 485E      		subi r20,-24
 811 04a6 5F4F      		sbci r21,-1
 812 04a8 60E0      		ldi r22,0
 813 04aa 70E0      		ldi r23,0
 814 04ac 498F      		std Y+25,r20
 815 04ae 5A8F      		std Y+26,r21
 816 04b0 6B8F      		std Y+27,r22
 817 04b2 7C8F      		std Y+28,r23
 248:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(ResponseSize);
 818               		.loc 1 248 0
 819 04b4 C801      		movw r24,r16
 820 04b6 A0E0      		ldi r26,0
 821 04b8 B0E0      		ldi r27,0
 822 04ba 8DA3      		std Y+37,r24
 823 04bc 9EA3      		std Y+38,r25
 824 04be AFA3      		std Y+39,r26
 825 04c0 B8A7      		std Y+40,r27
 249:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t) - sizeof(R
 826               		.loc 1 249 0
 827 04c2 80E1      		ldi r24,lo8(16)
 828 04c4 90E0      		ldi r25,0
 829 04c6 A0E0      		ldi r26,0
 830 04c8 B0E0      		ldi r27,0
 831 04ca 89A7      		std Y+41,r24
 832 04cc 9AA7      		std Y+42,r25
 833 04ce ABA7      		std Y+43,r26
 834 04d0 BCA7      		std Y+44,r27
 835 04d2 00C0      		rjmp .L1
 836               	.LVL49:
 837               	.L12:
 253:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->Status                  = CPU_TO_LE32(REMOTE_NDIS_STATUS_NOT_SUPPORTED);
 838               		.loc 1 253 0
 839 04d4 8BEB      		ldi r24,lo8(-69)
 840 04d6 90E0      		ldi r25,0
 841 04d8 A0E0      		ldi r26,0
 842 04da B0EC      		ldi r27,lo8(-64)
 843 04dc 89A3      		std Y+33,r24
 844 04de 9AA3      		std Y+34,r25
 845 04e0 ABA3      		std Y+35,r26
 846 04e2 BCA3      		std Y+36,r27
 254:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->MessageLength           = CPU_TO_LE32(sizeof(RNDIS_Query_Complete_t));
 847               		.loc 1 254 0
 848 04e4 88E1      		ldi r24,lo8(24)
 849 04e6 90E0      		ldi r25,0
 850 04e8 A0E0      		ldi r26,0
 851 04ea B0E0      		ldi r27,0
 852 04ec 898F      		std Y+25,r24
 853 04ee 9A8F      		std Y+26,r25
 854 04f0 AB8F      		std Y+27,r26
 855 04f2 BC8F      		std Y+28,r27
 256:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferLength = CPU_TO_LE32(0);
 856               		.loc 1 256 0
 857 04f4 1DA2      		std Y+37,__zero_reg__
 858 04f6 1EA2      		std Y+38,__zero_reg__
 859 04f8 1FA2      		std Y+39,__zero_reg__
 860 04fa 18A6      		std Y+40,__zero_reg__
 257:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 				QUERY_Response->InformationBufferOffset = CPU_TO_LE32(0);
 861               		.loc 1 257 0
 862 04fc 19A6      		std Y+41,__zero_reg__
 863 04fe 1AA6      		std Y+42,__zero_reg__
 864 0500 1BA6      		std Y+43,__zero_reg__
 865 0502 1CA6      		std Y+44,__zero_reg__
 866 0504 00C0      		rjmp .L1
 867               	.LVL50:
 868               	.L36:
 869               	.LBE77:
 870               	.LBE78:
 871               	.LBE84:
 277:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 872               		.loc 1 277 0
 873 0506 80E0      		ldi r24,0
 874 0508 90E0      		ldi r25,0
 875 050a DC01      		movw r26,r24
 876 050c 00C0      		rjmp .L34
 877               	.LVL51:
 878               	.L1:
 879               	/* epilogue start */
 112:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 880               		.loc 1 112 0
 881 050e DF91      		pop r29
 882 0510 CF91      		pop r28
 883 0512 1F91      		pop r17
 884 0514 0F91      		pop r16
 885 0516 0895      		ret
 886               		.cfi_endproc
 887               	.LFE99:
 889               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 890               	.global	RNDIS_Device_ConfigureEndpoints
 892               	RNDIS_Device_ConfigureEndpoints:
 893               	.LFB100:
 115:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 894               		.loc 1 115 0
 895               		.cfi_startproc
 896               	.LVL52:
 897 0000 1F93      		push r17
 898               	.LCFI4:
 899               		.cfi_def_cfa_offset 3
 900               		.cfi_offset 17, -2
 901 0002 CF93      		push r28
 902               	.LCFI5:
 903               		.cfi_def_cfa_offset 4
 904               		.cfi_offset 28, -3
 905 0004 DF93      		push r29
 906               	.LCFI6:
 907               		.cfi_def_cfa_offset 5
 908               		.cfi_offset 29, -4
 909               	/* prologue: function */
 910               	/* frame size = 0 */
 911               	/* stack size = 3 */
 912               	.L__stack_usage = 3
 913 0006 EC01      		movw r28,r24
 116:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 914               		.loc 1 116 0
 915 0008 4596      		adiw r24,21
 916               	.LVL53:
 917 000a FC01      		movw r30,r24
 918 000c 86E8      		ldi r24,lo8(-122)
 919 000e DF01      		movw r26,r30
 920               		0:
 921 0010 1D92      		st X+,__zero_reg__
 922 0012 8A95      		dec r24
 923 0014 01F4      		brne 0b
 924               	.LVL54:
 118:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 925               		.loc 1 118 0
 926 0016 11E0      		ldi r17,lo8(1)
 927               	.LVL55:
 928               	.L59:
 929               	.LBB85:
 930               	.LBB86:
 125:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 931               		.loc 1 125 0
 932 0018 8981      		ldd r24,Y+1
 933 001a 1813      		cpse r17,r24
 934 001c 00C0      		rjmp .L55
 127:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 935               		.loc 1 127 0
 936 001e 2A81      		ldd r18,Y+2
 937 0020 3B81      		ldd r19,Y+3
 938               	.LVL56:
 130:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 939               		.loc 1 130 0
 940 0022 4C81      		ldd r20,Y+4
 941               	.LVL57:
 128:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 942               		.loc 1 128 0
 943 0024 80E8      		ldi r24,lo8(-128)
 944 0026 00C0      		rjmp .L68
 945               	.LVL58:
 946               	.L55:
 132:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 947               		.loc 1 132 0
 948 0028 8D81      		ldd r24,Y+5
 949 002a 1813      		cpse r17,r24
 950 002c 00C0      		rjmp .L57
 134:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 951               		.loc 1 134 0
 952 002e 2E81      		ldd r18,Y+6
 953 0030 3F81      		ldd r19,Y+7
 954               	.LVL59:
 137:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 955               		.loc 1 137 0
 956 0032 4885      		ldd r20,Y+8
 957               	.LVL60:
 135:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_OUT;
 958               		.loc 1 135 0
 959 0034 80E0      		ldi r24,0
 960               	.LVL61:
 961               	.L68:
 136:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_BULK;
 962               		.loc 1 136 0
 963 0036 92E0      		ldi r25,lo8(2)
 964 0038 00C0      		rjmp .L56
 965               	.LVL62:
 966               	.L57:
 139:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 967               		.loc 1 139 0
 968 003a 8985      		ldd r24,Y+9
 969 003c 1817      		cp r17,r24
 970 003e 01F0      		breq .L58
 971               	.L65:
 972               	.LBE86:
 118:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 973               		.loc 1 118 0
 974 0040 1F5F      		subi r17,lo8(-(1))
 975               	.LVL63:
 976 0042 1730      		cpi r17,lo8(7)
 977 0044 01F4      		brne .L59
 158:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return true;
 978               		.loc 1 158 0
 979 0046 81E0      		ldi r24,lo8(1)
 980 0048 00C0      		rjmp .L60
 981               	.LVL64:
 982               	.L58:
 983               	.LBB93:
 141:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 984               		.loc 1 141 0
 985 004a 2A85      		ldd r18,Y+10
 986 004c 3B85      		ldd r19,Y+11
 987               	.LVL65:
 144:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 988               		.loc 1 144 0
 989 004e 4C85      		ldd r20,Y+12
 990               	.LVL66:
 142:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Direction    = ENDPOINT_DIR_IN;
 991               		.loc 1 142 0
 992 0050 80E8      		ldi r24,lo8(-128)
 143:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			Type         = EP_TYPE_INTERRUPT;
 993               		.loc 1 143 0
 994 0052 93E0      		ldi r25,lo8(3)
 995               	.LVL67:
 996               	.L56:
 151:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 997               		.loc 1 151 0
 998 0054 4423      		tst r20
 999 0056 01F0      		breq .L66
 1000 0058 44E0      		ldi r20,lo8(4)
 1001               	.LVL68:
 1002 005a 00C0      		rjmp .L61
 1003               	.LVL69:
 1004               	.L66:
 1005 005c 40E0      		ldi r20,0
 1006               	.LVL70:
 1007               	.L61:
 127:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 1008               		.loc 2 127 0 discriminator 3
 1009 005e E8E0      		ldi r30,lo8(8)
 1010 0060 F0E0      		ldi r31,0
 126:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 1011               		.loc 2 126 0 discriminator 3
 1012 0062 50E0      		ldi r21,0
 1013 0064 00C0      		rjmp .L62
 1014               	.LVL71:
 1015               	.L63:
 1016               	.LBB87:
 1017               	.LBB88:
 1018               	.LBB89:
 1019               	.LBB90:
 131:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 1020               		.loc 2 131 0
 1021 0066 5F5F      		subi r21,lo8(-(1))
 1022               	.LVL72:
 132:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1023               		.loc 2 132 0
 1024 0068 EE0F      		lsl r30
 1025 006a FF1F      		rol r31
 1026               	.LVL73:
 1027               	.L62:
 129:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 1028               		.loc 2 129 0
 1029 006c E217      		cp r30,r18
 1030 006e F307      		cpc r31,r19
 1031 0070 00F0      		brlo .L63
 1032               	.LBE90:
 1033               	.LBE89:
 276:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 1034               		.loc 2 276 0
 1035 0072 4260      		ori r20,lo8(2)
 1036               	.LVL74:
 1037               	.LBB92:
 1038               	.LBB91:
 135:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 1039               		.loc 2 135 0
 1040 0074 5295      		swap r21
 1041               	.LVL75:
 1042 0076 507F      		andi r21,lo8(-16)
 1043               	.LBE91:
 1044               	.LBE92:
 276:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 1045               		.loc 2 276 0
 1046 0078 452B      		or r20,r21
 1047 007a B0E4      		ldi r27,lo8(64)
 1048 007c 9B9F      		mul r25,r27
 1049 007e 9001      		movw r18,r0
 1050 0080 1124      		clr __zero_reg__
 1051               	.LVL76:
 1052 0082 61E0      		ldi r22,lo8(1)
 1053 0084 8111      		cpse r24,__zero_reg__
 1054 0086 00C0      		rjmp .L64
 1055 0088 60E0      		ldi r22,0
 1056               	.L64:
 1057 008a 622B      		or r22,r18
 1058 008c 812F      		mov r24,r17
 1059               	.LVL77:
 1060 008e 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1061               	.LVL78:
 1062               	.LBE88:
 1063               	.LBE87:
 151:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 1064               		.loc 1 151 0
 1065 0092 8111      		cpse r24,__zero_reg__
 1066 0094 00C0      		rjmp .L65
 1067               	.LVL79:
 1068               	.L60:
 1069               	/* epilogue start */
 1070               	.LBE93:
 1071               	.LBE85:
 159:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1072               		.loc 1 159 0
 1073 0096 DF91      		pop r29
 1074 0098 CF91      		pop r28
 1075               	.LVL80:
 1076 009a 1F91      		pop r17
 1077 009c 0895      		ret
 1078               		.cfi_endproc
 1079               	.LFE100:
 1081               		.section	.rodata
 1082               	.LC0:
 1083 0000 A1        		.byte	-95
 1084 0001 01        		.byte	1
 1085 0002 0000      		.word	0
 1086 0004 0000      		.word	0
 1087 0006 0000      		.word	0
 1088               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1089               	.global	RNDIS_Device_USBTask
 1091               	RNDIS_Device_USBTask:
 1092               	.LFB101:
 162:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1093               		.loc 1 162 0
 1094               		.cfi_startproc
 1095               	.LVL81:
 1096 0000 0F93      		push r16
 1097               	.LCFI7:
 1098               		.cfi_def_cfa_offset 3
 1099               		.cfi_offset 16, -2
 1100 0002 1F93      		push r17
 1101               	.LCFI8:
 1102               		.cfi_def_cfa_offset 4
 1103               		.cfi_offset 17, -3
 1104 0004 CF93      		push r28
 1105               	.LCFI9:
 1106               		.cfi_def_cfa_offset 5
 1107               		.cfi_offset 28, -4
 1108 0006 DF93      		push r29
 1109               	.LCFI10:
 1110               		.cfi_def_cfa_offset 6
 1111               		.cfi_offset 29, -5
 1112 0008 CDB7      		in r28,__SP_L__
 1113 000a DEB7      		in r29,__SP_H__
 1114               	.LCFI11:
 1115               		.cfi_def_cfa_register 28
 1116 000c 2897      		sbiw r28,8
 1117               	.LCFI12:
 1118               		.cfi_def_cfa_offset 14
 1119 000e 0FB6      		in __tmp_reg__,__SREG__
 1120 0010 F894      		cli
 1121 0012 DEBF      		out __SP_H__,r29
 1122 0014 0FBE      		out __SREG__,__tmp_reg__
 1123 0016 CDBF      		out __SP_L__,r28
 1124               	/* prologue: function */
 1125               	/* frame size = 8 */
 1126               	/* stack size = 12 */
 1127               	.L__stack_usage = 12
 163:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1128               		.loc 1 163 0
 1129 0018 2091 0000 		lds r18,USB_DeviceState
 1130 001c 2430      		cpi r18,lo8(4)
 1131 001e 01F4      		brne .L69
 166:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 1132               		.loc 1 166 0
 1133 0020 FC01      		movw r30,r24
 1134 0022 2185      		ldd r18,Z+9
 1135               	.LVL82:
 1136               	.LBB94:
 1137               	.LBB95:
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1138               		.loc 2 330 0
 1139 0024 2093 E900 		sts 233,r18
 1140               	.LBE95:
 1141               	.LBE94:
 1142               	.LBB96:
 1143               	.LBB97:
 467:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1144               		.loc 2 467 0
 1145 0028 2091 E800 		lds r18,232
 1146               	.LVL83:
 1147               	.LBE97:
 1148               	.LBE96:
 168:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1149               		.loc 1 168 0
 1150 002c 20FF      		sbrs r18,0
 1151 002e 00C0      		rjmp .L69
 168:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1152               		.loc 1 168 0 is_stmt 0 discriminator 1
 1153 0030 8C01      		movw r16,r24
 1154 0032 0B56      		subi r16,107
 1155 0034 1F4F      		sbci r17,-1
 1156 0036 F801      		movw r30,r16
 1157 0038 8081      		ld r24,Z
 1158               	.LVL84:
 1159 003a 8823      		tst r24
 1160 003c 01F0      		breq .L69
 1161               	.LBB98:
 170:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1162               		.loc 1 170 0 is_stmt 1
 1163 003e 88E0      		ldi r24,lo8(8)
 1164 0040 E0E0      		ldi r30,lo8(.LC0)
 1165 0042 F0E0      		ldi r31,hi8(.LC0)
 1166 0044 DE01      		movw r26,r28
 1167 0046 1196      		adiw r26,1
 1168               		0:
 1169 0048 0190      		ld r0,Z+
 1170 004a 0D92      		st X+,r0
 1171 004c 8A95      		dec r24
 1172 004e 01F4      		brne 0b
 179:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 1173               		.loc 1 179 0
 1174 0050 40E0      		ldi r20,0
 1175 0052 50E0      		ldi r21,0
 1176 0054 68E0      		ldi r22,lo8(8)
 1177 0056 70E0      		ldi r23,0
 1178 0058 CE01      		movw r24,r28
 1179 005a 0196      		adiw r24,1
 1180 005c 0E94 0000 		call Endpoint_Write_Stream_LE
 1181               	.LVL85:
 1182               	.LBB99:
 1183               	.LBB100:
 516:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1184               		.loc 2 516 0
 1185 0060 8091 E800 		lds r24,232
 1186 0064 8E77      		andi r24,lo8(126)
 1187 0066 8093 E800 		sts 232,r24
 1188               	.LBE100:
 1189               	.LBE99:
 183:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 1190               		.loc 1 183 0
 1191 006a F801      		movw r30,r16
 1192 006c 1082      		st Z,__zero_reg__
 1193               	.LVL86:
 1194               	.L69:
 1195               	/* epilogue start */
 1196               	.LBE98:
 185:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1197               		.loc 1 185 0
 1198 006e 2896      		adiw r28,8
 1199 0070 0FB6      		in __tmp_reg__,__SREG__
 1200 0072 F894      		cli
 1201 0074 DEBF      		out __SP_H__,r29
 1202 0076 0FBE      		out __SREG__,__tmp_reg__
 1203 0078 CDBF      		out __SP_L__,r28
 1204 007a DF91      		pop r29
 1205 007c CF91      		pop r28
 1206 007e 1F91      		pop r17
 1207 0080 0F91      		pop r16
 1208 0082 0895      		ret
 1209               		.cfi_endproc
 1210               	.LFE101:
 1212               		.section	.text.RNDIS_Device_IsPacketReceived,"ax",@progbits
 1213               	.global	RNDIS_Device_IsPacketReceived
 1215               	RNDIS_Device_IsPacketReceived:
 1216               	.LFB105:
 437:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			                                                         RNDIS_Data_Initialized : RNDIS_Data_Ini
 438:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 439:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 440:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		case OID_802_3_MULTICAST_LIST:
 441:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			/* Do nothing - throw away the value from the host as it is unused */
 442:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 443:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return true;
 444:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		default:
 445:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 			return false;
 446:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 447:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 448:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 449:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** bool RNDIS_Device_IsPacketReceived(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 450:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1217               		.loc 1 450 0
 1218               		.cfi_startproc
 1219               	.LVL87:
 1220               	/* prologue: function */
 1221               	/* frame size = 0 */
 1222               	/* stack size = 0 */
 1223               	.L__stack_usage = 0
 451:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1224               		.loc 1 451 0
 1225 0000 2091 0000 		lds r18,USB_DeviceState
 1226 0004 2430      		cpi r18,lo8(4)
 1227 0006 01F4      		brne .L82
 452:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1228               		.loc 1 452 0 discriminator 1
 1229 0008 FC01      		movw r30,r24
 1230 000a EA56      		subi r30,106
 1231 000c FF4F      		sbci r31,-1
 451:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1232               		.loc 1 451 0 discriminator 1
 1233 000e 2081      		ld r18,Z
 1234 0010 2230      		cpi r18,lo8(2)
 1235 0012 01F4      		brne .L82
 453:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 454:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return false;
 455:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 456:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 457:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1236               		.loc 1 457 0
 1237 0014 FC01      		movw r30,r24
 1238 0016 8581      		ldd r24,Z+5
 1239               	.LVL88:
 1240               	.LBB101:
 1241               	.LBB102:
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1242               		.loc 2 330 0
 1243 0018 8093 E900 		sts 233,r24
 1244               	.LBE102:
 1245               	.LBE101:
 1246               	.LBB103:
 1247               	.LBB104:
 479:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1248               		.loc 2 479 0
 1249 001c 8091 E800 		lds r24,232
 1250               	.LVL89:
 1251 0020 82FB      		bst r24,2
 1252 0022 8827      		clr r24
 1253 0024 80F9      		bld r24,0
 1254               	.LBE104:
 1255               	.LBE103:
 458:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return Endpoint_IsOUTReceived();
 1256               		.loc 1 458 0
 1257 0026 0895      		ret
 1258               	.LVL90:
 1259               	.L82:
 454:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return false;
 1260               		.loc 1 454 0
 1261 0028 80E0      		ldi r24,0
 1262               	.LVL91:
 459:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1263               		.loc 1 459 0
 1264 002a 0895      		ret
 1265               		.cfi_endproc
 1266               	.LFE105:
 1268               		.section	.text.RNDIS_Device_ReadPacket,"ax",@progbits
 1269               	.global	RNDIS_Device_ReadPacket
 1271               	RNDIS_Device_ReadPacket:
 1272               	.LFB106:
 460:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 461:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_ReadPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 462:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 463:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 uint16_t* const PacketLength)
 464:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1273               		.loc 1 464 0
 1274               		.cfi_startproc
 1275               	.LVL92:
 1276 0000 EF92      		push r14
 1277               	.LCFI13:
 1278               		.cfi_def_cfa_offset 3
 1279               		.cfi_offset 14, -2
 1280 0002 FF92      		push r15
 1281               	.LCFI14:
 1282               		.cfi_def_cfa_offset 4
 1283               		.cfi_offset 15, -3
 1284 0004 0F93      		push r16
 1285               	.LCFI15:
 1286               		.cfi_def_cfa_offset 5
 1287               		.cfi_offset 16, -4
 1288 0006 1F93      		push r17
 1289               	.LCFI16:
 1290               		.cfi_def_cfa_offset 6
 1291               		.cfi_offset 17, -5
 1292 0008 CF93      		push r28
 1293               	.LCFI17:
 1294               		.cfi_def_cfa_offset 7
 1295               		.cfi_offset 28, -6
 1296 000a DF93      		push r29
 1297               	.LCFI18:
 1298               		.cfi_def_cfa_offset 8
 1299               		.cfi_offset 29, -7
 1300 000c CDB7      		in r28,__SP_L__
 1301 000e DEB7      		in r29,__SP_H__
 1302               	.LCFI19:
 1303               		.cfi_def_cfa_register 28
 1304 0010 AC97      		sbiw r28,44
 1305               	.LCFI20:
 1306               		.cfi_def_cfa_offset 52
 1307 0012 0FB6      		in __tmp_reg__,__SREG__
 1308 0014 F894      		cli
 1309 0016 DEBF      		out __SP_H__,r29
 1310 0018 0FBE      		out __SREG__,__tmp_reg__
 1311 001a CDBF      		out __SP_L__,r28
 1312               	/* prologue: function */
 1313               	/* frame size = 44 */
 1314               	/* stack size = 50 */
 1315               	.L__stack_usage = 50
 1316 001c FC01      		movw r30,r24
 1317 001e 7B01      		movw r14,r22
 1318 0020 8A01      		movw r16,r20
 465:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1319               		.loc 1 465 0
 1320 0022 8091 0000 		lds r24,USB_DeviceState
 1321               	.LVL93:
 1322 0026 8430      		cpi r24,lo8(4)
 1323 0028 01F4      		brne .L87
 466:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1324               		.loc 1 466 0 discriminator 1
 1325 002a DF01      		movw r26,r30
 1326 002c AA56      		subi r26,106
 1327 002e BF4F      		sbci r27,-1
 465:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1328               		.loc 1 465 0 discriminator 1
 1329 0030 8C91      		ld r24,X
 1330 0032 8230      		cpi r24,lo8(2)
 1331 0034 01F4      		brne .L87
 467:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 468:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 469:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 470:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 471:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1332               		.loc 1 471 0
 1333 0036 8581      		ldd r24,Z+5
 1334               	.LVL94:
 1335               	.LBB105:
 1336               	.LBB106:
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1337               		.loc 2 330 0
 1338 0038 8093 E900 		sts 233,r24
 1339               	.LBE106:
 1340               	.LBE105:
 472:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 473:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = 0;
 1341               		.loc 1 473 0
 1342 003c FA01      		movw r30,r20
 1343               	.LVL95:
 1344 003e 1182      		std Z+1,__zero_reg__
 1345 0040 1082      		st Z,__zero_reg__
 1346               	.LBB107:
 1347               	.LBB108:
 479:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1348               		.loc 2 479 0
 1349 0042 8091 E800 		lds r24,232
 1350               	.LVL96:
 1351               	.LBE108:
 1352               	.LBE107:
 474:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 475:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (!(Endpoint_IsOUTReceived()))
 1353               		.loc 1 475 0
 1354 0046 82FF      		sbrs r24,2
 1355 0048 00C0      		rjmp .L88
 476:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_NoError;
 477:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 478:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 479:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1356               		.loc 1 479 0
 1357 004a 40E0      		ldi r20,0
 1358 004c 50E0      		ldi r21,0
 1359               	.LVL97:
 1360 004e 6CE2      		ldi r22,lo8(44)
 1361 0050 70E0      		ldi r23,0
 1362               	.LVL98:
 1363 0052 CE01      		movw r24,r28
 1364 0054 0196      		adiw r24,1
 1365 0056 0E94 0000 		call Endpoint_Read_Stream_LE
 1366               	.LVL99:
 480:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 481:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if (le32_to_cpu(RNDISPacketHeader.DataLength) > ETHERNET_FRAME_SIZE_MAX)
 1367               		.loc 1 481 0
 1368 005a 6D85      		ldd r22,Y+13
 1369 005c 7E85      		ldd r23,Y+14
 1370 005e 8F85      		ldd r24,Y+15
 1371 0060 9889      		ldd r25,Y+16
 1372 0062 6D3D      		cpi r22,-35
 1373 0064 F5E0      		ldi r31,5
 1374 0066 7F07      		cpc r23,r31
 1375 0068 8105      		cpc r24,__zero_reg__
 1376 006a 9105      		cpc r25,__zero_reg__
 1377 006c 00F0      		brlo .L85
 1378               	.LBB109:
 1379               	.LBB110:
 532:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 1380               		.loc 2 551 0
 1381 006e 8091 EB00 		lds r24,235
 1382 0072 8062      		ori r24,lo8(32)
 1383 0074 8093 EB00 		sts 235,r24
 482:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 483:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		Endpoint_StallTransaction();
 484:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 485:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return RNDIS_ERROR_LOGICAL_CMD_FAILED;
 1384               		.loc 1 485 0
 1385 0078 80E8      		ldi r24,lo8(-128)
 1386 007a 00C0      		rjmp .L84
 1387               	.L85:
 1388               	.LBE110:
 1389               	.LBE109:
 486:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 487:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 488:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	*PacketLength = (uint16_t)le32_to_cpu(RNDISPacketHeader.DataLength);
 1390               		.loc 1 488 0
 1391 007c F801      		movw r30,r16
 1392 007e 7183      		std Z+1,r23
 1393 0080 6083      		st Z,r22
 489:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 490:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Read_Stream_LE(Buffer, *PacketLength, NULL);
 1394               		.loc 1 490 0
 1395 0082 40E0      		ldi r20,0
 1396 0084 50E0      		ldi r21,0
 1397 0086 C701      		movw r24,r14
 1398 0088 0E94 0000 		call Endpoint_Read_Stream_LE
 1399               	.LVL100:
 1400               	.LBB111:
 1401               	.LBB112:
 531:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1402               		.loc 2 531 0
 1403 008c 8091 E800 		lds r24,232
 1404 0090 8B77      		andi r24,lo8(123)
 1405 0092 8093 E800 		sts 232,r24
 1406 0096 00C0      		rjmp .L88
 1407               	.LVL101:
 1408               	.L87:
 1409               	.LBE112:
 1410               	.LBE111:
 468:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 1411               		.loc 1 468 0
 1412 0098 82E0      		ldi r24,lo8(2)
 1413 009a 00C0      		rjmp .L84
 1414               	.LVL102:
 1415               	.L88:
 476:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_NoError;
 1416               		.loc 1 476 0
 1417 009c 80E0      		ldi r24,0
 1418               	.L84:
 1419               	/* epilogue start */
 491:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearOUT();
 492:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 493:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 494:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1420               		.loc 1 494 0
 1421 009e AC96      		adiw r28,44
 1422 00a0 0FB6      		in __tmp_reg__,__SREG__
 1423 00a2 F894      		cli
 1424 00a4 DEBF      		out __SP_H__,r29
 1425 00a6 0FBE      		out __SREG__,__tmp_reg__
 1426 00a8 CDBF      		out __SP_L__,r28
 1427 00aa DF91      		pop r29
 1428 00ac CF91      		pop r28
 1429 00ae 1F91      		pop r17
 1430 00b0 0F91      		pop r16
 1431               	.LVL103:
 1432 00b2 FF90      		pop r15
 1433 00b4 EF90      		pop r14
 1434               	.LVL104:
 1435 00b6 0895      		ret
 1436               		.cfi_endproc
 1437               	.LFE106:
 1439               		.section	.text.RNDIS_Device_SendPacket,"ax",@progbits
 1440               	.global	RNDIS_Device_SendPacket
 1442               	RNDIS_Device_SendPacket:
 1443               	.LFB107:
 495:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 496:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** uint8_t RNDIS_Device_SendPacket(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 497:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 void* Buffer,
 498:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c ****                                 const uint16_t PacketLength)
 499:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** {
 1444               		.loc 1 499 0
 1445               		.cfi_startproc
 1446               	.LVL105:
 1447 0000 BF92      		push r11
 1448               	.LCFI21:
 1449               		.cfi_def_cfa_offset 3
 1450               		.cfi_offset 11, -2
 1451 0002 CF92      		push r12
 1452               	.LCFI22:
 1453               		.cfi_def_cfa_offset 4
 1454               		.cfi_offset 12, -3
 1455 0004 DF92      		push r13
 1456               	.LCFI23:
 1457               		.cfi_def_cfa_offset 5
 1458               		.cfi_offset 13, -4
 1459 0006 EF92      		push r14
 1460               	.LCFI24:
 1461               		.cfi_def_cfa_offset 6
 1462               		.cfi_offset 14, -5
 1463 0008 FF92      		push r15
 1464               	.LCFI25:
 1465               		.cfi_def_cfa_offset 7
 1466               		.cfi_offset 15, -6
 1467 000a 0F93      		push r16
 1468               	.LCFI26:
 1469               		.cfi_def_cfa_offset 8
 1470               		.cfi_offset 16, -7
 1471 000c 1F93      		push r17
 1472               	.LCFI27:
 1473               		.cfi_def_cfa_offset 9
 1474               		.cfi_offset 17, -8
 1475 000e CF93      		push r28
 1476               	.LCFI28:
 1477               		.cfi_def_cfa_offset 10
 1478               		.cfi_offset 28, -9
 1479 0010 DF93      		push r29
 1480               	.LCFI29:
 1481               		.cfi_def_cfa_offset 11
 1482               		.cfi_offset 29, -10
 1483 0012 CDB7      		in r28,__SP_L__
 1484 0014 DEB7      		in r29,__SP_H__
 1485               	.LCFI30:
 1486               		.cfi_def_cfa_register 28
 1487 0016 AC97      		sbiw r28,44
 1488               	.LCFI31:
 1489               		.cfi_def_cfa_offset 55
 1490 0018 0FB6      		in __tmp_reg__,__SREG__
 1491 001a F894      		cli
 1492 001c DEBF      		out __SP_H__,r29
 1493 001e 0FBE      		out __SREG__,__tmp_reg__
 1494 0020 CDBF      		out __SP_L__,r28
 1495               	/* prologue: function */
 1496               	/* frame size = 44 */
 1497               	/* stack size = 53 */
 1498               	.L__stack_usage = 53
 1499 0022 6B01      		movw r12,r22
 1500 0024 7A01      		movw r14,r20
 500:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	uint8_t ErrorCode;
 501:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 502:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1501               		.loc 1 502 0
 1502 0026 2091 0000 		lds r18,USB_DeviceState
 1503 002a 2430      		cpi r18,lo8(4)
 1504 002c 01F0      		breq .+2
 1505 002e 00C0      		rjmp .L92
 503:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	    (RNDISInterfaceInfo->State.CurrRNDISState != RNDIS_Data_Initialized))
 1506               		.loc 1 503 0 discriminator 1
 1507 0030 FC01      		movw r30,r24
 1508 0032 EA56      		subi r30,106
 1509 0034 FF4F      		sbci r31,-1
 502:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((USB_DeviceState != DEVICE_STATE_Configured) ||
 1510               		.loc 1 502 0 discriminator 1
 1511 0036 2081      		ld r18,Z
 1512 0038 2230      		cpi r18,lo8(2)
 1513 003a 01F0      		breq .+2
 1514 003c 00C0      		rjmp .L92
 504:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	{
 505:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 506:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	}
 507:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 508:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 1515               		.loc 1 508 0
 1516 003e DC01      		movw r26,r24
 1517 0040 1196      		adiw r26,1
 1518 0042 8C91      		ld r24,X
 1519               	.LVL106:
 1520               	.LBB113:
 1521               	.LBB114:
 330:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1522               		.loc 2 330 0
 1523 0044 8093 E900 		sts 233,r24
 1524               	.LBE114:
 1525               	.LBE113:
 509:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 510:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 1526               		.loc 1 510 0
 1527 0048 0E94 0000 		call Endpoint_WaitUntilReady
 1528               	.LVL107:
 1529 004c B82E      		mov r11,r24
 1530               	.LVL108:
 1531 004e 8111      		cpse r24,__zero_reg__
 1532 0050 00C0      		rjmp .L90
 511:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	  return ErrorCode;
 512:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 513:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDIS_Packet_Message_t RNDISPacketHeader;
 514:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 515:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1533               		.loc 1 515 0
 1534 0052 FE01      		movw r30,r28
 1535 0054 3196      		adiw r30,1
 1536 0056 8CE2      		ldi r24,lo8(44)
 1537 0058 DF01      		movw r26,r30
 1538               		0:
 1539 005a 1D92      		st X+,__zero_reg__
 1540 005c 8A95      		dec r24
 1541 005e 01F4      		brne 0b
 516:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 517:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageType   = CPU_TO_LE32(REMOTE_NDIS_PACKET_MSG);
 1542               		.loc 1 517 0
 1543 0060 81E0      		ldi r24,lo8(1)
 1544 0062 90E0      		ldi r25,0
 1545 0064 A0E0      		ldi r26,0
 1546 0066 B0E0      		ldi r27,0
 1547 0068 8983      		std Y+1,r24
 1548 006a 9A83      		std Y+2,r25
 1549 006c AB83      		std Y+3,r26
 1550 006e BC83      		std Y+4,r27
 518:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.MessageLength = cpu_to_le32(sizeof(RNDIS_Packet_Message_t) + PacketLength);
 1551               		.loc 1 518 0
 1552 0070 C701      		movw r24,r14
 1553 0072 8C96      		adiw r24,44
 1554 0074 A0E0      		ldi r26,0
 1555 0076 B0E0      		ldi r27,0
 1556 0078 8D83      		std Y+5,r24
 1557 007a 9E83      		std Y+6,r25
 1558 007c AF83      		std Y+7,r26
 1559 007e B887      		std Y+8,r27
 519:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataOffset    = CPU_TO_LE32(sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Messag
 1560               		.loc 1 519 0
 1561 0080 44E2      		ldi r20,lo8(36)
 1562 0082 50E0      		ldi r21,0
 1563 0084 60E0      		ldi r22,0
 1564 0086 70E0      		ldi r23,0
 1565 0088 4987      		std Y+9,r20
 1566 008a 5A87      		std Y+10,r21
 1567 008c 6B87      		std Y+11,r22
 1568 008e 7C87      		std Y+12,r23
 520:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	RNDISPacketHeader.DataLength    = cpu_to_le32(PacketLength);
 1569               		.loc 1 520 0
 1570 0090 8701      		movw r16,r14
 1571 0092 20E0      		ldi r18,0
 1572 0094 30E0      		ldi r19,0
 1573 0096 0D87      		std Y+13,r16
 1574 0098 1E87      		std Y+14,r17
 1575 009a 2F87      		std Y+15,r18
 1576 009c 388B      		std Y+16,r19
 521:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 522:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1577               		.loc 1 522 0
 1578 009e 40E0      		ldi r20,0
 1579 00a0 50E0      		ldi r21,0
 1580 00a2 6CE2      		ldi r22,lo8(44)
 1581 00a4 70E0      		ldi r23,0
 1582 00a6 CF01      		movw r24,r30
 1583 00a8 0E94 0000 		call Endpoint_Write_Stream_LE
 1584               	.LVL109:
 523:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_Write_Stream_LE(Buffer, PacketLength, NULL);
 1585               		.loc 1 523 0
 1586 00ac 40E0      		ldi r20,0
 1587 00ae 50E0      		ldi r21,0
 1588 00b0 B701      		movw r22,r14
 1589 00b2 C601      		movw r24,r12
 1590 00b4 0E94 0000 		call Endpoint_Write_Stream_LE
 1591               	.LVL110:
 1592               	.LBB115:
 1593               	.LBB116:
 516:../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1594               		.loc 2 516 0
 1595 00b8 8091 E800 		lds r24,232
 1596 00bc 8E77      		andi r24,lo8(126)
 1597 00be 8093 E800 		sts 232,r24
 1598 00c2 00C0      		rjmp .L90
 1599               	.LVL111:
 1600               	.L92:
 1601               	.LBE116:
 1602               	.LBE115:
 505:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 		return ENDPOINT_RWSTREAM_DeviceDisconnected;
 1603               		.loc 1 505 0
 1604 00c4 72E0      		ldi r23,lo8(2)
 1605 00c6 B72E      		mov r11,r23
 1606               	.LVL112:
 1607               	.L90:
 524:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	Endpoint_ClearIN();
 525:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 
 526:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** 	return ENDPOINT_RWSTREAM_NoError;
 527:../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.c **** }
 1608               		.loc 1 527 0
 1609 00c8 8B2D      		mov r24,r11
 1610               	/* epilogue start */
 1611 00ca AC96      		adiw r28,44
 1612 00cc 0FB6      		in __tmp_reg__,__SREG__
 1613 00ce F894      		cli
 1614 00d0 DEBF      		out __SP_H__,r29
 1615 00d2 0FBE      		out __SREG__,__tmp_reg__
 1616 00d4 CDBF      		out __SP_L__,r28
 1617 00d6 DF91      		pop r29
 1618 00d8 CF91      		pop r28
 1619 00da 1F91      		pop r17
 1620 00dc 0F91      		pop r16
 1621 00de FF90      		pop r15
 1622 00e0 EF90      		pop r14
 1623               	.LVL113:
 1624 00e2 DF90      		pop r13
 1625 00e4 CF90      		pop r12
 1626               	.LVL114:
 1627 00e6 BF90      		pop r11
 1628 00e8 0895      		ret
 1629               		.cfi_endproc
 1630               	.LFE107:
 1632               		.section	.progmem.data,"a",@progbits
 1635               	AdapterSupportedOIDList:
 1636 0000 01        		.byte	1
 1637 0001 01        		.byte	1
 1638 0002 01        		.byte	1
 1639 0003 00        		.byte	0
 1640 0004 02        		.byte	2
 1641 0005 02        		.byte	2
 1642 0006 01        		.byte	1
 1643 0007 00        		.byte	0
 1644 0008 02        		.byte	2
 1645 0009 01        		.byte	1
 1646 000a 01        		.byte	1
 1647 000b 00        		.byte	0
 1648 000c 03        		.byte	3
 1649 000d 01        		.byte	1
 1650 000e 01        		.byte	1
 1651 000f 00        		.byte	0
 1652 0010 04        		.byte	4
 1653 0011 01        		.byte	1
 1654 0012 01        		.byte	1
 1655 0013 00        		.byte	0
 1656 0014 06        		.byte	6
 1657 0015 01        		.byte	1
 1658 0016 01        		.byte	1
 1659 0017 00        		.byte	0
 1660 0018 11        		.byte	17
 1661 0019 01        		.byte	1
 1662 001a 01        		.byte	1
 1663 001b 00        		.byte	0
 1664 001c 07        		.byte	7
 1665 001d 01        		.byte	1
 1666 001e 01        		.byte	1
 1667 001f 00        		.byte	0
 1668 0020 0A        		.byte	10
 1669 0021 01        		.byte	1
 1670 0022 01        		.byte	1
 1671 0023 00        		.byte	0
 1672 0024 0B        		.byte	11
 1673 0025 01        		.byte	1
 1674 0026 01        		.byte	1
 1675 0027 00        		.byte	0
 1676 0028 0C        		.byte	12
 1677 0029 01        		.byte	1
 1678 002a 01        		.byte	1
 1679 002b 00        		.byte	0
 1680 002c 0D        		.byte	13
 1681 002d 01        		.byte	1
 1682 002e 01        		.byte	1
 1683 002f 00        		.byte	0
 1684 0030 0E        		.byte	14
 1685 0031 01        		.byte	1
 1686 0032 01        		.byte	1
 1687 0033 00        		.byte	0
 1688 0034 11        		.byte	17
 1689 0035 01        		.byte	1
 1690 0036 01        		.byte	1
 1691 0037 00        		.byte	0
 1692 0038 14        		.byte	20
 1693 0039 01        		.byte	1
 1694 003a 01        		.byte	1
 1695 003b 00        		.byte	0
 1696 003c 01        		.byte	1
 1697 003d 01        		.byte	1
 1698 003e 02        		.byte	2
 1699 003f 00        		.byte	0
 1700 0040 02        		.byte	2
 1701 0041 01        		.byte	1
 1702 0042 02        		.byte	2
 1703 0043 00        		.byte	0
 1704 0044 03        		.byte	3
 1705 0045 01        		.byte	1
 1706 0046 02        		.byte	2
 1707 0047 00        		.byte	0
 1708 0048 04        		.byte	4
 1709 0049 01        		.byte	1
 1710 004a 02        		.byte	2
 1711 004b 00        		.byte	0
 1712 004c 05        		.byte	5
 1713 004d 01        		.byte	1
 1714 004e 02        		.byte	2
 1715 004f 00        		.byte	0
 1716 0050 01        		.byte	1
 1717 0051 01        		.byte	1
 1718 0052 01        		.byte	1
 1719 0053 01        		.byte	1
 1720 0054 02        		.byte	2
 1721 0055 01        		.byte	1
 1722 0056 01        		.byte	1
 1723 0057 01        		.byte	1
 1724 0058 03        		.byte	3
 1725 0059 01        		.byte	1
 1726 005a 01        		.byte	1
 1727 005b 01        		.byte	1
 1728 005c 04        		.byte	4
 1729 005d 01        		.byte	1
 1730 005e 01        		.byte	1
 1731 005f 01        		.byte	1
 1732 0060 01        		.byte	1
 1733 0061 01        		.byte	1
 1734 0062 02        		.byte	2
 1735 0063 01        		.byte	1
 1736 0064 02        		.byte	2
 1737 0065 01        		.byte	1
 1738 0066 02        		.byte	2
 1739 0067 01        		.byte	1
 1740 0068 03        		.byte	3
 1741 0069 01        		.byte	1
 1742 006a 02        		.byte	2
 1743 006b 01        		.byte	1
 1744               		.text
 1745               	.Letext0:
 1746               		.file 3 "/usr/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 1747               		.file 4 "/usr/lib/gcc/avr/4.7.2/include/stddef.h"
 1748               		.file 5 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../Device.h"
 1749               		.file 6 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../StdRequestType.h"
 1750               		.file 7 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../EndpointStream.h"
 1751               		.file 8 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 1752               		.file 9 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/RNDISClassDevice.h"
 1753               		.file 10 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/USBTask.h"
 1754               		.file 11 "/usr/lib/gcc/avr/4.7.2/../../../../avr/include/avr/pgmspace.h"
 1755               		.file 12 "../LUFA-120219/LUFA/Drivers/USB/Class/Device/../../Core/AVR8/../AVR8/EndpointStream_AVR8
DEFINED SYMBOLS
                            *ABS*:0000000000000000 RNDISClassDevice.c
     /tmp/ccr4YTuU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccr4YTuU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccr4YTuU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccr4YTuU.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccr4YTuU.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccr4YTuU.s:13     .text.RNDIS_Device_ProcessControlRequest:0000000000000000 RNDIS_Device_ProcessControlRequest
     /tmp/ccr4YTuU.s:1635   .progmem.data:0000000000000000 AdapterSupportedOIDList
     /tmp/ccr4YTuU.s:892    .text.RNDIS_Device_ConfigureEndpoints:0000000000000000 RNDIS_Device_ConfigureEndpoints
     /tmp/ccr4YTuU.s:1091   .text.RNDIS_Device_USBTask:0000000000000000 RNDIS_Device_USBTask
     /tmp/ccr4YTuU.s:1215   .text.RNDIS_Device_IsPacketReceived:0000000000000000 RNDIS_Device_IsPacketReceived
     /tmp/ccr4YTuU.s:1271   .text.RNDIS_Device_ReadPacket:0000000000000000 RNDIS_Device_ReadPacket
     /tmp/ccr4YTuU.s:1442   .text.RNDIS_Device_SendPacket:0000000000000000 RNDIS_Device_SendPacket

UNDEFINED SYMBOLS
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_ConfigureEndpoint_Prv
USB_DeviceState
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
Endpoint_WaitUntilReady
__do_copy_data
