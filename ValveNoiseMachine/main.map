Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o (exit)
/usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

timerTick           0x2               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x10a
 *(.vectors)
 .vectors       0x00000000       0x14 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000014                . = ALIGN (0x2)
                0x00000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000014        0x0 linker stubs
 *(.trampolines*)
                0x00000014                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000014                __ctors_start = .
 *(.ctors)
                0x00000014                __ctors_end = .
                0x00000014                __dtors_start = .
 *(.dtors)
                0x00000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000014        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
                0x00000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000014        0x8 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000001c       0x10 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000001c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000002c        0x4 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
 *(.init9)
 *(.text)
 .text          0x00000030        0x2 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
                0x00000030                __vector_1
                0x00000030                __bad_interrupt
                0x00000030                __vector_6
                0x00000030                __vector_7
                0x00000030                __vector_5
                0x00000030                __vector_4
                0x00000030                __vector_9
                0x00000030                __vector_2
                0x00000030                __vector_8
 .text          0x00000032       0x6c main.o
                0x00000032                delay_ms
                0x00000048                __vector_3
 .text          0x0000009e        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000009e        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000009e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000009e       0x68 main.o
                0x0000009e                main
 .text.libgcc.mul
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x00000106                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000106        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000106                exit
                0x00000106                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000106        0x4 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000010a                _etext = .

.data           0x00800060        0x0 load address 0x0000010a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x2
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
 .bss           0x00800060        0x0 main.o
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0x2 main.o
                0x00800060                timerTick
                0x00800062                PROVIDE (__bss_end, .)
                0x0000010a                __data_load_start = LOADADDR (.data)
                0x0000010a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800062        0x0
                0x00800062                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800062                PROVIDE (__noinit_end, .)
                0x00800062                _end = .
                0x00800062                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xdd4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
 .stab          0x000006b4      0x600 main.o
                                0x60c (size before relaxing)
 .stab          0x00000cb4       0x6c /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
                                 0x78 (size before relaxing)
 .stab          0x00000d20       0xb4 /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                 0xc0 (size before relaxing)

.stabstr        0x00000000      0xa21
 *(.stabstr)
 .stabstr       0x00000000      0xa21 /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__bss_end                                         /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__init                                            /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__stack                                           /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_1                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_2                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_3                                        main.o
                                                  /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_4                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_5                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_6                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_7                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_8                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_9                                        /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vector_default                                  /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
__vectors                                         /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
_exit                                             /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
delay_ms                                          main.o
exit                                              /usr/lib/gcc/avr/4.7.1/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.7.1/../../../../avr/lib/crttn13.o
timerTick                                         main.o
